apiVersion: v1
kind: Service
metadata:
  name: auth-proxy
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: auth-proxy
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-auth
  namespace: {{ .Release.Namespace }}
  {{- if .Values.certificateIssuer }}
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: {{ .Values.certificateIssuer }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.ingressClassName }}
  {{- if .Values.certificateIssuer }}
  tls:
  - hosts:
    - {{ .Values.domain }}
    secretName: cert-auth-proxy
  {{- end }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: auth-proxy
            port:
              name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-proxy
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: auth-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: auth-proxy
    spec:
      containers:
      - name: auth-proxy
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        command:
        - server
        - --port=8080
        - --whoami-addr={{ .Values.whoAmIAddr }}
        - --login-addr={{ .Values.loginAddr }}
        - --upstream={{ .Values.upstream }}
